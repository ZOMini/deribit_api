version: "3.2"
services:
  deribit_db:
    image: postgres:13-alpine
    container_name: deribit_db
    env_file: 
      - ./.env
    volumes:
      - deribit_db_data:/var/lib/postgresql/data/
    restart: always
    networks:
      - deribit_nw

  deribit_api:
    build: 
      context: ./deribit_api
      dockerfile: Dockerfile
    container_name: deribit_api
    image: deribit_image
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=deribit_db
    command: bash -c "gunicorn -k uvicorn.workers.UvicornH11Worker main:app --bind 0.0.0.0:8002"
    depends_on:
      - deribit_db
    networks:
      - deribit_nw
    restart: on-failure

  deribit_worker:
    image: deribit_image
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=deribit_db
    command: bash -c "python worker.py"
    depends_on:
      - deribit_db
    networks:
      - deribit_nw
    restart: on-failure

  deribit_tests:
    image: deribit_image
    env_file:
      - ./.env
    environment:
      - POSTGRES_HOST=deribit_db
    command: bash -c "python -m pytest"
    depends_on:
      - deribit_api
    networks:
      - deribit_nw
    restart: on-failure

  nginx:
    container_name: nginx
    image: nginx:1.20.1-alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    ports:
      - "80:80"
    depends_on:
      - deribit_api
    networks:
      - deribit_nw
    restart: always

volumes:
  deribit_db_data:

networks:
  deribit_nw:
    driver: bridge